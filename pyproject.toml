[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "pybind11>=2.10.0",
    "numpy>=1.19.0",
    "cmake>=3.15",
]
build-backend = "setuptools.build_meta"

[project]
name = "vigra"
dynamic = ["version"]
description = "VIGRA Computer Vision Library - Python bindings"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Ullrich Koethe", email = "ullrich.koethe@iwr.uni-heidelberg.de"},
]
maintainers = [
    {name = "VIGRA Team", email = "vigra@informatik.uni-hamburg.de"},
]
keywords = [
    "computer vision",
    "image processing",
    "machine learning",
    "scientific computing",
    "numpy",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.19.0",
]

[project.optional-dependencies]
# Core image I/O dependencies
io = [
    "Pillow>=8.0.0",
]

# Scientific computing dependencies
scientific = [
    "scipy>=1.6.0",
    "scikit-image>=0.18.0",
]

# Visualization dependencies
viz = [
    "matplotlib>=3.3.0",
]

# Qt integration (optional)
qt = [
    "PyQt5>=5.12.0; python_version<'3.11'",
    "PyQt6>=6.0.0; python_version>='3.11'",
]

# HDF5 support
hdf5 = [
    "h5py>=3.0.0",
]

# Complete feature set
full = [
    "vigra[io,scientific,viz,hdf5]",
    "Pillow>=8.0.0",
    "scipy>=1.6.0",
    "scikit-image>=0.18.0",
    "matplotlib>=3.3.0",
    "h5py>=3.0.0",
]

# Development dependencies
dev = [
    "vigra[full]",
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "black>=21.0.0",
    "ruff>=0.1.0",
    "mypy>=0.910",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "build>=0.7.0",
    "twine>=3.4.0",
]

[project.urls]
Homepage = "http://hci.iwr.uni-heidelberg.de/vigra/"
Documentation = "http://hci.iwr.uni-heidelberg.de/vigra/"
Repository = "https://github.com/ukoethe/vigra"
"Bug Tracker" = "https://github.com/ukoethe/vigra/issues"

[tool.setuptools]
packages = ["vigra"]
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "vigra.__version__"}

[tool.setuptools.package-dir]
vigra = "vigra"

[tool.setuptools.package-data]
vigra = [
    "*.so",
    "*.pyd",
    "*.dll",
    "dlls/*.dll",
    "doc/vigra/*.*",
    "doc/vigra/documents/*.*",
    "doc/vigranumpy/*.*",
    "doc/vigranumpy/_static/*.*",
]

# Build configuration will be handled by setup.py for complex C++ compilation

# Code quality tools configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "vigra.*",
    "numpy.*",
    "scipy.*",
    "matplotlib.*",
    "PIL.*",
    "h5py.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "vigranumpy/test",
    "test",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["vigra"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]